/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
	time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};


/ {
  combos {
    compatible = "zmk,combos";
    combo_esc {
      timeout-ms = <50>;
      key-positions = <19 20>;
      bindings = <&kp ESC>;
    };
    combo_minus {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp MINUS>;
    };
    combo_underscore {
      timeout-ms = <50>;
      key-positions = <27 28>;
      bindings = <&kp UNDERSCORE>;
    };
    combo_caps {
      timeout-ms = <50>;
      key-positions = <17 18>;
      bindings = <&caps_word>;
    };
    combo_single_quotes {
      timeout-ms = <50>;
      key-positions = <31 32>;
      bindings = <&kp SQT>;
    };
    combo_double_quotes {
      timeout-ms = <50>;
      key-positions = <7 8>;
      bindings = <&kp DQT>;
    };
    combo_tmux {
      timeout-ms = <50>;
      key-positions = <16 19>;
      bindings = <&tmux_bind>;
    };
  };

macros {
        tmux_bind: tmux_bind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                ;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |      |
// |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &none  &lt 3 Q     &lt 2 W    &kp E &kp R   &kp T   &kp Y &kp U   &kp I     &kp O   &kp P           &none 
   &none  &mt LGUI A  &mt LALT S &kp D &lt 1 F &kp G   &kp H &lt 1 J &kp K     &kp L   &mt RGUI SEMI   &none 
   &none  &mt LCTRL Z &kp X      &kp C &kp V   &lt 1 B &kp N &kp M   &kp COMMA &kp DOT &mt RCTRL FSLH  &none 
                  &kp LSHFT &kp TAB &kp BSPC   &kp SPACE &kp RET &kp RSHFT
                        >;
                 };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings =  
   &none   &kp EXCL    &kp AT    &kp LBRC  &kp RBRC       &kp PIPE  &kp MINUS   &kp N7 &kp N8 &kp N9    &kp STAR      &none 
   &none   &kp HASH    &kp DLLR  &kp LPAR  &kp RPAR       &kp AMPS  &kp EQUAL   &kp N4 &kp N5 &kp N6    &kp PLUS      &none 
   &none   &kp PERCENT &kp CARET &kp LBKT  &kp RBKT       &kp TILDE &kp N0      &kp N1 &kp N2 &kp N3    &kp BACKSLASH &none 
                                    &trans     &trans       &trans       &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none  &trans  &trans &trans   &trans   &trans      &kp HOME  &kp PG_DN  &kp PG_UP &kp END   &kp RPAR &none
   &none  &trans  &trans &trans   &trans   &trans      &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT &kp BSLH &none
   &none  &trans  &trans &trans   &trans   &trans      &trans    &trans     &trans    &trans    &trans   &none
                             &trans &trans   &trans    &trans   &trans    &kp RALT
                        >;
                };

                newlayer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none  &trans   &trans &trans   &trans   &trans      &trans         &trans         &trans        &trans          &trans    &none 
   &none  &trans   &trans &trans   &trans   &trans      &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP  &mmv MOVE_RIGHT &mkp RCLK &none 
   &none  &trans   &trans &trans   &trans   &trans      &trans         &trans         &trans        &trans          &trans    &none 
                             &trans &trans  &trans      &mkp LCLK      &trans &trans
                        >;
                };
        };
};
