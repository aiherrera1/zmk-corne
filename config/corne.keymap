/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

/ {
  combos {
    compatible = "zmk,combos";
    combo_esc {
      timeout-ms = <50>;
      key-positions = <19 20>;
      bindings = <&kp ESC>;
    };
    combo_minus {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp MINUS>;
    };
    combo_underscore {
      timeout-ms = <50>;
      key-positions = <27 28>;
      bindings = <&kp UNDERSCORE>;
    };
    combo_caps {
      timeout-ms = <50>;
      key-positions = <17 18>;
      bindings = <&kp CAPS>;
    };
    combo_single_quotes {
      timeout-ms = <50>;
      key-positions = <31 32>;
      bindings = <&kp SQT>;
    };
    combo_double_quotes {
      timeout-ms = <50>;
      key-positions = <7 8>;
      bindings = <&kp DQT>;
    };
    combo_tmux {
      timeout-ms = <50>;
      key-positions = <16 19>;
      bindings = <&zed_em_kay>;
    };
  };

macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |      |
// |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp X &lt 4 Q &lt 2 W    &kp E &kp R   &kp T   &kp Y &kp U   &kp I     &kp O   &kp P          &kp X
   &kp X &mt LGUI A  &mt LALT S &kp D &lt 1 F &kp G   &kp H &lt 1 J &kp K     &kp L   &kp SEMI       &kp X
   &kp X &mt LCTRL Z &kp X      &kp C &kp V   &lt 1 B &kp N &kp M   &kp COMMA &kp DOT &mt RCTRL FSLH &kp X
                  &kp LSHFT &kp BSPC &kp TAB   &kp RET &kp SPACE &kp RSHFT
                        >;
                 };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp X  &kp EXCL    &kp AT    &kp LBRC  &kp RBRC       &kp PIPE  &kp MINUS   &kp N7   &kp N8 &kp N9    &kp STAR      &kp X
   &kp X  &kp HASH    &kp DLLR  &kp LPAR  &kp RPAR       &kp AMPS  &kp EQUAL    &kp N4   &kp N5 &kp N6    &kp PLUS      &kp X
   &kp X  &kp PERCENT &kp CARET &kp LBKT  &kp RBKT       &kp TILDE &kp N0      &kp N1   &kp N2 &kp N3    &kp BACKSLASH &kp X
                                    &trans     &trans       &trans       &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp HOME   &kp PG_DN  &kp PG_UP &kp END   &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                newlayer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp X &kp DOWN &kp UP  &kp RIGHT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
